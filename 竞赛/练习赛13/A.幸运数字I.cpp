/*
链接：https://www.nowcoder.com/acm/contest/70/A
来源：牛客网

时间限制：C/C++ 1秒，其他语言2秒
空间限制：C/C++ 262144K，其他语言524288K
64bit IO Format: %lld

题目描述 
定义一个数字为幸运数字当且仅当它的所有数位都是4或者7。
比如说，47、744、4都是幸运数字而5、17、467都不是。
现在，给定一个字符串s，请求出一个字符串，使得：
1、它所代表的整数是一个幸运数字；
2、它非空；
3、它作为s的子串（不是子序列）出现了最多的次数（不能为0次）。
请求出这个串（如果有多解，请输出字典序最小的那一个）。

输入描述:
串s（1 <= |s| <= 50)。s只包含数字字符，可以有前导零。

输出描述:
一个串表示答案。
无解输出-1。

示例1
输入
047

输出
4

示例2
输入
16

输出
-1

解题思路:
幸运字符串只包含'4'和'7'这两个字符, 而'4' ,'7'这两个字符自身又是幸运数字,
所以出现次数最多的幸运数字只可能是'4'或者'7'， 所以只需要统计这两个字符出现
的次数，然后按要求输出就行了。 
*/ 

#include<iostream>
#include<cstring>
using namespace std;

int main()
{
#ifdef WFX
freopen("in.txt","r",stdin);
#endif
    int n4=0, n7=0;
    string s;
    cin>>s;
    for(int i=0,n=s.size(); i<n; ++i)
    {
    	if(s[i] == '4') ++n4;
    	else if(s[i] == '7' ) ++n7;
	}
    if(n4 + n7 ==0) printf("-1");
    else printf("%d", n4>=n7? 4 : 7);

    return 0;
}
